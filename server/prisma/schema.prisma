// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String    @unique
  password     String
  role         String    @default("viewer")
  dob          DateTime?
  profilePhoto String?

  blogs Blog[]
  news  News[]
}

model Blog {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String   @unique @db.ObjectId
  title   String
  content Json // Flexible structure for title, images, videos, etc.
  date    DateTime @default(now())
  genre   String   @default("Politics")
  // likes   String[] // Storing User IDs who liked the blog

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model News {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String   @unique @db.ObjectId
  title   String
  content Json // Flexible structure for title, images, videos, etc.
  date    DateTime @default(now())
  genre   String   @default("Politics")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
